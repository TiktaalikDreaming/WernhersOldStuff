// wos-parachute-srf.cfg v1.0.0.0
// Wernher's Old Stuff (WOS)
// created: 
// updated: 17 Jul 2022

// this file: CC BY-SA 4.0 by zer0Kerbal.
// ghosted

PART
{
	name = wos-parachute-srf
	module = Part
	author = TD and zer0Kerbal

	// mesh = RecoveryParachute.mu
	MODEL
	{
		model = WernhersOldStuff/Assets/AgSrfparachute
	}
	scale = 1
	rescaleFactor = 0.32
	bulkheadProfiles = srf

	node_attach = 0.0, -0.02713, 0.0, 0.0, -1.0, 0.0, 1
	attachRules = 0,1,0,0,0


	sound_parachute_open = activate

	TechRequired = start
	entryCost = 4600
	cost = 850
	category = Utility
	subcategory = 0

	title = Aggregat Parachute
	manufacturer = Elektromechanische Werke
	description = Surface Attach chute for recovering Aggregate rocket stages
	tags = wos arrest blue canopy chute decel descen drag entry fall landing re- return safe slow
	//tags = #autoLOC_500935 //#autoLOC_500935 = arrest canopy chute decel descen drag drogue entry fall landing orange re- return safe slow stab

	mass = 0.025

	dragModelType = default
	angularDrag = 3

	maxTemp = 2500 // = 3100
	emissiveConstant = 0.7

	crashTolerance = 12
	breakingForce = 100
	breakingTorque = 50

	buoyancyUseCubeNamed = PACKED
	bodyLiftMultiplier = 0

	stageOffset = -1
	preferredStage = PARACHUTESTAGE

	MODULE
	{
		name = ModuleParachute
		invertCanopy = true
		autoCutSpeed = 0.5
		capName = SurfaceChuteCover
		canopyName = canopy
		semiDeployedAnimation = 1stDeploy
		fullyDeployedAnimation = 2ndDeploy
		stowedDrag = 0.22
		semiDeployedDrag = 1
		fullyDeployedDrag = 200
		minAirPressureToOpen = 0.04
		clampMinAirPressure = 0.04
		deployAltitude = 1000
		deploymentSpeed = 0.12
		semiDeploymentSpeed = 0.5
		chuteMaxTemp = 350
		machHeatMultBase = 0.25 // new
		chuteThermalMassPerArea = 0.09 // new
	}

	MODULE
	{
		name = ModuleDragModifier
		dragCubeName = SEMIDEPLOYED
		dragModifier = 1 // 0.67
	}
	MODULE
	{
		name = ModuleDragModifier
		dragCubeName = DEPLOYED
		dragModifier = 200 // 25
	}

	DRAG_CUBE
	{
		cube = PACKED, 0.6406,0.6401,0.9837, 0.6406,0.6426,0.7139, 1.108,0.7326,0.6962, 1.108,0.9454,0.1664, 0.6445,0.6465,0.9837, 0.6445,0.6305,0.7139, 0,0.2645,0, 1.233,0.6659,1.233
		cube = SEMIDEPLOYED, 16.9,0.517,2.009, 16.9,0.517,1.823, 9.335,0.1336,18.06, 9.335,0.1646,18.5, 16.92,0.5226,2.009, 16.92,0.5021,1.823, 0,9.231,-1.073E-06, 3.459,18.6,3.459
		cube = DEPLOYED, 54.17,18.69,6.347, 54.17,18.69,6.153, 115,12.08,18.44, 115,11.65,18.73, 54.19,18.77,6.347, 54.19,18.5,6.153, 0,9.235,-9.537E-07, 12.15,18.61,12.15
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 8
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.2
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.1
			prestige = Significant
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.02
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 1000
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 300
			body = _Home
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1000
			body = _NotHome
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}
}
